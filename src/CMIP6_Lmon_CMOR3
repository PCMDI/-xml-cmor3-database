table_id: "Table Lmon"	
modeling_realm: "land"	

frequency: "mon"	

cmor_version: 2.6	# minimum version of CMOR that can read this table
cf_version:   1.4	# version of CF that output conforms to
project_id:   "CMIP5"	# project id
table_date:   "17 July 2013"	# date this table was constructed

missing_value: 1.e20	# value used to indicate a missing value
                          #   in arrays output by netCDF as 32-bit IEEE 
                          #   floating-point numbers (float or real)

baseURL: "http://cmip-pcmdi.llnl.gov/CMIP5/dataLocation"	
product: "output"	

required_global_attributes: [ "creation_date","tracking_id","forcing","model_id","parent_experiment_id","parent_experiment_rip","branch_time","contact","institute_id" ]	# space separated required global attribute 

forcings:   "N/A Nat Ant GHG SD SI SA TO SO Oz LU Sl Vl SS Ds BC MD OC AA"	

expt_id_ok:
( { title: " 10- or 30-year run initialized in year XXXX", id: "decadalXXXX"},
  { title: "volcano-free hindcast initialized in year XXXX", id: "noVolcXXXX" },
  { title: "prediction with 2010 volcano", id: "volcIn2010" },
  { title: "pre-industrial control", id: "piControl" },
  { title: "historical", id: "historical" },
  { title: "historical extension", id: "historicalExt" },
  { title: "other historical forcing", id: "historicalMisc" },
  { title: "mid-Holocene", id: "midHolocene" },
  { title: "last glacial maximum", id: "lgm" },
  { title: "last millennium", id: "past1000" },
  { title: "RCP4.5", id: "rcp45" },
  { title: "RCP8.5", id: "rcp85" },
  { title: "RCP2.6", id: "rcp26" },
  { title: "RCP6", id: "rcp60" },
  { title: "ESM pre-industrial control", id: "esmControl" },
  { title: "ESM historical", id: "esmHistorical" },
  { title: "ESM RCP8.5", id: "esmrcp85" },
  { title: "ESM fixed climate 1", id: "esmFixClim1" },
  { title: "ESM fixed climate 2", id: "esmFixClim2" },
  { title: "ESM feedback 1", id: "esmFdbk1" },
  { title: "ESM feedback 2", id: "esmFdbk2" },
  { title: "1 percent per year CO2", id: "1pctCO2" },
  { title: "abrupt 4XCO2", id: "abrupt4xCO2" },
  { title: "natural-only", id: "historicalNat" },
  { title: "GHG-only", id: "historicalGHG" },
  { title: "AMIP", id: "amip" },
  { title: "2030 time-slice", id: "sst2030" },
  { title: "control SST climatology", id: "sstClim" },
  { title: "CO2 forcing", id: "sstClim4xCO2" },
  { title: "all aerosol forcing", id: "sstClimAerosol" },
  { title: "sulfate aerosol forcing", id: "sstClimSulfate" },
  { title: "4xCO2 AMIP", id: "amip4xCO2" },
  { title: "AMIP plus patterned anomaly", id: "amipFuture" },
  { title: "aqua planet control", id: "aquaControl" },
  { title: "4xCO2 aqua planet", id: "aqua4xCO2" },
  { title: "aqua planet plus 4K anomaly", id: "aqua4K" },
  { title: "AMIP plus 4K anomaly", id: "amip4K" },


  {} )
approx_interval:  30.000000	# approximate spacing between successive time
                          #   samples (in units of the output time 
                          #   coordinate.

#============
axis_entries:{  longitude: {
#============
#----------------------------------
# Axis attributes:
#----------------------------------
  standard_name:    "longitude"	
  units:            "degrees_east"	
  axis:             "X"	# X, Y, Z, T (default: undeclared)
  long_name:        "longitude"	
#----------------------------------
# Additional axis information:
#----------------------------------
  out_name:         "lon"	
  valid_min:        0.0	
  valid_max:        360.0	
  stored_direction: "increasing"	
  type:             "double"	
  must_have_bounds: "yes"	
#----------------------------------
#


#============
    }, latitude: {
#============
#----------------------------------
# Axis attributes:
#----------------------------------
  standard_name:    "latitude"	
  units:            "degrees_north"	
  axis:             "Y"	# X, Y, Z, T (default: undeclared)
  long_name:        "latitude"	
#----------------------------------
# Additional axis information:
#----------------------------------
  out_name:         "lat"	
  valid_min:        -90.0	
  valid_max:        90.0	
  stored_direction: "increasing"	
  type:             "double"	
  must_have_bounds: "yes"	
#----------------------------------
#


#============
    }, time: {
#============
#----------------------------------
# Axis attributes:
#----------------------------------
  standard_name:    "time"	
  units:            "days since ?"	
  axis:             "T"	# X, Y, Z, T (default: undeclared)
  long_name:        "time"	
#----------------------------------
# Additional axis information:
#----------------------------------
  out_name:         "time"	
  stored_direction: "increasing"	
  type:             "double"	
  must_have_bounds: "yes"	
#----------------------------------
#


#============
    }, sdepth: {
#============
#----------------------------------
# Axis attributes:
#----------------------------------
  standard_name:    "depth"	
  units:            "m"	
  axis:             "Z"	# X, Y, Z, T (default: undeclared)
  positive:         "down"	# up or down (default: undeclared)
  long_name:        "depth"	
#----------------------------------
# Additional axis information:
#----------------------------------
  out_name:         "depth"	
  valid_min:        0.0	
  valid_max:        200.0	
  stored_direction: "increasing"	
  type:             "double"	
  must_have_bounds: "yes"	
#----------------------------------
#


#============
    }, sdepth1: {
#============
#----------------------------------
# Axis attributes:
#----------------------------------
  standard_name:    "depth"	
  units:            "m"	
  axis:             "Z"	# X, Y, Z, T (default: undeclared)
  positive:         "down"	# up or down (default: undeclared)
  long_name:        "depth"	
#----------------------------------
# Additional axis information:
#----------------------------------
  out_name:         "depth"	
  valid_min:        0.0	
  valid_max:        0.2	
  stored_direction: "increasing"	
  type:             "double"	
  value:            0.05	# of scalar (singleton) dimension 
  bounds_values:    "0.0 0.1"	# of scalar (singleton) dimension bounds
  must_have_bounds: "yes"	
#----------------------------------
#


#============
    }, vegtype: {
#============
#----------------------------------
# Axis attributes:
#----------------------------------
  standard_name:    "area_type"	
  long_name:        "plant functional type"	
#----------------------------------
# Additional axis information:
#----------------------------------
  out_name:         "type"	
  type:             "character"	
  must_have_bounds: "no"	
  coords_attrib:    "type_description"	
#----------------------------------
#


#============
    }, typebare: {
#============
#----------------------------------
# Axis attributes:
#----------------------------------
  standard_name:    "area_type"	
  long_name:        "surface type"	
#----------------------------------
# Additional axis information:
#----------------------------------
  out_name:         "type"	
  type:             "character"	
  value:            "bare_ground"	# of scalar (singleton) dimension 
  must_have_bounds: "no"	
  coords_attrib:    "type_description"	
#----------------------------------
#


#============
    }, typepdec: {
#============
#----------------------------------
# Axis attributes:
#----------------------------------
  standard_name:    "area_type"	
  long_name:        "surface type"	
#----------------------------------
# Additional axis information:
#----------------------------------
  out_name:         "type"	
  type:             "character"	
  value:            "primary_deciduous_trees"	# of scalar (singleton) dimension 
  must_have_bounds: "no"	
  coords_attrib:    "type_description"	
#----------------------------------
#


#============
    }, typepever: {
#============
#----------------------------------
# Axis attributes:
#----------------------------------
  standard_name:    "area_type"	
  long_name:        "surface type"	
#----------------------------------
# Additional axis information:
#----------------------------------
  out_name:         "type"	
  type:             "character"	
  value:            "primary_evergreen_trees"	# of scalar (singleton) dimension 
  must_have_bounds: "no"	
  coords_attrib:    "type_description"	
#----------------------------------
#


#============
    }, typesdec: {
#============
#----------------------------------
# Axis attributes:
#----------------------------------
  standard_name:    "area_type"	
  long_name:        "surface type"	
#----------------------------------
# Additional axis information:
#----------------------------------
  out_name:         "type"	
  type:             "character"	
  value:            "secondary_decidous_trees"	# of scalar (singleton) dimension 
  must_have_bounds: "no"	
  coords_attrib:    "type_description"	
#----------------------------------
#


#============
    }, typesever: {
#============
#----------------------------------
# Axis attributes:
#----------------------------------
  standard_name:    "area_type"	
  long_name:        "surface type"	
#----------------------------------
# Additional axis information:
#----------------------------------
  out_name:         "type"	
  type:             "character"	
  value:            "secondary_evergreen_trees"	# of scalar (singleton) dimension 
  must_have_bounds: "no"	
  coords_attrib:    "type_description"	
#----------------------------------
#


#============
    }, typec3pft: {
#============
#----------------------------------
# Axis attributes:
#----------------------------------
  standard_name:    "area_type"	
  long_name:        "surface type"	
#----------------------------------
# Additional axis information:
#----------------------------------
  out_name:         "type"	
  type:             "character"	
  value:            "c3_plant_functional_types"	# of scalar (singleton) dimension 
  must_have_bounds: "no"	
  coords_attrib:    "type_description"	
#----------------------------------
#


#============
    }, typec4pft: {
#============
#----------------------------------
# Axis attributes:
#----------------------------------
  standard_name:    "area_type"	
  long_name:        "surface type"	
#----------------------------------
# Additional axis information:
#----------------------------------
  out_name:         "type"	
  type:             "character"	
  value:            "c4_plant_functional_types"	# of scalar (singleton) dimension 
  must_have_bounds: "no"	
  coords_attrib:    "type_description"	
#----------------------------------
#

#============
} }  variable_entry:{     mrsos: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "moisture_content_of_soil_layer"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Moisture in Upper Portion of Soil Column"	
  comment:           "the mass of water in all phases in a thin surface soil layer."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time","sdepth1" ]	
  out_name:          "mrsos"	
  type:              "real"	
  valid_min:         -2.008	
  valid_max:         146.5	
  ok_min_mean_abs:   -35.89	
  ok_max_mean_abs:   123.3	
#----------------------------------
#

#============
    }, mrso: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "soil_moisture_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Total Soil Moisture Content"	
  comment:           "the mass per unit area  (summed over all soil layers) of water in all phases."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "mrso"	
  type:              "real"	
  valid_min:         -64.17	
  valid_max:         5717	
  ok_min_mean_abs:   -1424	
  ok_max_mean_abs:   3038	
#----------------------------------
#

#============
    }, mrfso: {
#============
  modeling_realm:    "land landIce"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "soil_frozen_water_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Soil Frozen Water Content"	
  comment:           "the mass (summed over all all layers) of frozen water."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "mrfso"	
  type:              "real"	
  valid_min:         0	
  valid_max:         5763	
  ok_min_mean_abs:   -419	
  ok_max_mean_abs:   940.3	
#----------------------------------
#

#============
    }, mrros: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "surface_runoff_flux"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Surface Runoff"	
  comment:           "the total surface runoff leaving the land portion of the grid cell."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "mrros"	
  type:              "real"	
  valid_min:         -6.802e-06	
  valid_max:         0.0009825	
  ok_min_mean_abs:   -5.867e-06	
  ok_max_mean_abs:   1.302e-05	
#----------------------------------
#

#============
    }, mrro: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "runoff_flux"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Total Runoff"	
  comment:           ""
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "mrro"	
  type:              "real"	
  valid_min:         -0.0002019	
  valid_max:         0.001065	
  ok_min_mean_abs:   -6.668e-06	
  ok_max_mean_abs:   1.874e-05	
#----------------------------------
#

#============
    }, prveg: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "precipitation_flux_onto_canopy"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Precipitation onto Canopy"	
  comment:           "the precipitation flux that is intercepted by the vegetation canopy (if present in model) before reaching the ground."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "prveg"	
  type:              "real"	
#----------------------------------
#

#============
    }, evspsblveg: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "water_evaporation_flux_from_canopy"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Evaporation from Canopy"	
  comment:           "the canopy evaporation+sublimation (if present in model)."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "evspsblveg"	
  type:              "real"	
  positive:          "up"	
#----------------------------------
#

#============
    }, evspsblsoi: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "water_evaporation_flux_from_soil"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Water Evaporation from Soil"	
  comment:           "includes sublimation."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "evspsblsoi"	
  type:              "real"	
  positive:          "up"	
#----------------------------------
#

#============
    }, tran: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "transpiration_flux"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Transpiration"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "tran"	
  type:              "real"	
  positive:          "up"	
#----------------------------------
#

#============
    }, mrlsl: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "moisture_content_of_soil_layer"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:          "Water Content of Soil Layer"	
  comment:           "in each soil layer, the mass of water in all phases, including ice.  Reported as ""missing"" for grid cells occupied entirely by ""sea"""	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","sdepth","time" ]	
  out_name:          "mrlsl"	
  type:              "real"	
#----------------------------------
#

#============
    }, tsl: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "soil_temperature"	
  units:             "K"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Temperature of Soil"	
  comment:           ""
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","sdepth","time" ]	
  out_name:          "tsl"	
  type:              "real"	
#----------------------------------
#

#============
    }, treeFrac: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Tree Cover Fraction"	
  comment:           "fraction of entire grid cell  that is covered by trees."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "treeFrac"	
  type:              "real"	
#----------------------------------
#

#============
    }, grassFrac: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Natural Grass Fraction"	
  comment:           "fraction of entire grid cell that is covered by natural grass."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "grassFrac"	
  type:              "real"	
#----------------------------------
#

#============
    }, shrubFrac: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Shrub Fraction"	
  comment:           "fraction of entire grid cell  that is covered by shrub."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "shrubFrac"	
  type:              "real"	
#----------------------------------
#

#============
    }, cropFrac: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Crop Fraction"	
  comment:           "fraction of entire grid cell  that is covered by crop."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cropFrac"	
  type:              "real"	
#----------------------------------
#

#============
    }, pastureFrac: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Anthropogenic Pasture Fraction"	
  comment:           "fraction of entire grid cell  that is covered by anthropogenic pasture."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "pastureFrac"	
  type:              "real"	
#----------------------------------
#

#============
    }, baresoilFrac: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Bare Soil Fraction"	
  comment:           "fraction of entire grid cell  that is covered by bare soil."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time","typebare" ]	
  out_name:          "baresoilFrac"	
  type:              "real"	
#----------------------------------
#

#============
    }, residualFrac: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Fraction of Grid Cell that is Land but Neither Vegetation-Covered nor Bare Soil"	
  comment:           "fraction of entire grid cell  that is land and is covered by ""non-vegetation"" and ""non-bare-soil"" (e.g., urban, ice, lakes, etc.)"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "residualFrac"	
  type:              "real"	
#----------------------------------
#

#============
    }, burntArea: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Burnt Area Fraction"	
  comment:           "fraction of entire grid cell  that is covered by burnt vegetation."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "burntArea"	
  type:              "real"	
#----------------------------------
#

#============
    }, cVeg: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "vegetation_carbon_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Vegetation"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cVeg"	
  type:              "real"	
#----------------------------------
#

#============
    }, cLitter: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "litter_carbon_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Litter Pool"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cLitter"	
  type:              "real"	
#----------------------------------
#

#============
    }, cSoil: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "soil_carbon_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Soil Pool"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cSoil"	
  type:              "real"	
#----------------------------------
#

#============
    }, cProduct: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "carbon_content_of_products_of_anthropogenic_land_use_change"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Products of Land Use Change"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cProduct"	
  type:              "real"	
#----------------------------------
#

#============
    }, lai: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "leaf_area_index"	
  units:             "1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Leaf Area Index"	
  comment:           "a ratio obtained by dividing the total upper leaf surface area of vegetation by the (horizontal) surface area of the land on which it grows."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "lai"	
  type:              "real"	
#----------------------------------
#

#============
    }, gpp: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "gross_primary_productivity_of_carbon"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass Flux out of Atmosphere due to Gross Primary Production on Land"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "gpp"	
  type:              "real"	
  positive:          "down"	
#----------------------------------
#

#============
    }, ra: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "plant_respiration_carbon_flux"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass Flux into Atmosphere due to Autotrophic (Plant) Respiration on Land"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "ra"	
  type:              "real"	
  positive:          "up"	
#----------------------------------
#

#============
    }, npp: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "net_primary_productivity_of_carbon"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass Flux out of Atmosphere due to Net Primary Production on Land"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "npp"	
  type:              "real"	
  positive:          "down"	
#----------------------------------
#

#============
    }, rh: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "heterotrophic_respiration_carbon_flux"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass Flux into Atmosphere due to Heterotrophic Respiration on Land"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "rh"	
  type:              "real"	
  positive:          "up"	
#----------------------------------
#

#============
    }, fFire: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "surface_upward_mass_flux_of_carbon_dioxide_expressed_as_carbon_due_to_emission_from_fires_excluding_anthropogenic_land_use_change"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass Flux into Atmosphere due to CO2 Emission from Fire"	
  comment:           "CO2 emissions (expressed as a carbon mass flux) from natural fires + human ignition fires as calculated by the fire module of the DGVM, but excluding any CO2 flux from fire included in fLuc, defined below (CO2 Flux to Atmosphere from Land Use Change)."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "fFire"	
  type:              "real"	
  positive:          "up"	
#----------------------------------
#

#============
    }, fGrazing: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "surface_upward_mass_flux_of_carbon_dioxide_expressed_as_carbon_due_to_emission_from_grazing"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass Flux into Atmosphere due to Grazing on Land"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "fGrazing"	
  type:              "real"	
  positive:          "up"	
#----------------------------------
#

#============
    }, fHarvest: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "surface_upward_mass_flux_of_carbon_dioxide_expressed_as_carbon_due_to_emission_from_crop_harvesting"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass Flux into Atmosphere due to Crop Harvesting"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "fHarvest"	
  type:              "real"	
  positive:          "up"	
#----------------------------------
#

#============
    }, fLuc: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "surface_net_upward_mass_flux_of_carbon_dioxide_expressed_as_carbon_due_to_emission_from_anthropogenic_land_use_change"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Net Carbon Mass Flux into Atmosphere due to Land Use Change"	
  comment:           "human changes to land (excluding forest regrowth) accounting possibly for different time-scales related to fate of the wood, for example."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "fLuc"	
  type:              "real"	
  positive:          "up"	
#----------------------------------
#

#============
    }, nbp: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "surface_net_downward_mass_flux_of_carbon_dioxide_expressed_as_carbon_due_to_all_land_processes"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass Flux out of Atmosphere due to Net Biospheric Production on Land"	
  comment:           "This is the net mass flux of carbon between land and atmosphere calculated as photosynthesis MINUS the sum of  plant and soil respiration, carbonfluxes  from fire, harvest, grazing  and land use change. Positive flux  is into the land."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "nbp"	
  type:              "real"	
  positive:          "down"	
#----------------------------------
#

#============
    }, fVegLitter: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "litter_carbon_flux"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Total Carbon Mass Flux from Vegetation to Litter"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "fVegLitter"	
  type:              "real"	
#----------------------------------
#

#============
    }, fLitterSoil: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "carbon_mass_flux_into_soil_from_litter"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Total Carbon Mass Flux from Litter to Soil"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "fLitterSoil"	
  type:              "real"	
#----------------------------------
#

#============
    }, fVegSoil: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "carbon_mass_flux_into_soil_from_vegetation_excluding_litter"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Total Carbon Mass Flux from Vegetation Directly to Soil"	
  comment:           "In some models part of carbon (e.g., root exudate) can go directly into the soil pool without entering litter."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "fVegSoil"	
  type:              "real"	
#----------------------------------
#

#============
    }, cLeaf: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "leaf_carbon_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Leaves"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cLeaf"	
  type:              "real"	
#----------------------------------
#

#============
    }, cWood: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "wood_carbon_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Wood"	
  comment:           "including sapwood and hardwood."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cWood"	
  type:              "real"	
#----------------------------------
#

#============
    }, cRoot: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "root_carbon_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Roots"	
  comment:           "including fine and coarse roots."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cRoot"	
  type:              "real"	
#----------------------------------
#

#============
    }, cMisc: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "miscellaneous_living_matter_carbon_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Other Living Compartments on Land"	
  comment:           "e.g., labile, fruits, reserves, etc."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cMisc"	
  type:              "real"	
#----------------------------------
#

#============
    }, cCwd: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "wood_debris_carbon_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Coarse Woody Debris"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cCwd"	
  type:              "real"	
#----------------------------------
#

#============
    }, cLitterAbove: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "surface_litter_carbon_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Above-Ground Litter"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cLitterAbove"	
  type:              "real"	
#----------------------------------
#

#============
    }, cLitterBelow: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "subsurface_litter_carbon_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Below-Ground Litter"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cLitterBelow"	
  type:              "real"	
#----------------------------------
#

#============
    }, cSoilFast: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "fast_soil_pool_carbon_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Fast Soil Pool"	
  comment:           "fast is meant as lifetime of less than 10 years for  reference climate conditions (20 C, no water limitations)."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cSoilFast"	
  type:              "real"	
#----------------------------------
#

#============
    }, cSoilMedium: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "medium_soil_pool_carbon_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Medium Soil Pool"	
  comment:           "medium is meant as lifetime of more than than 10 years and less than 100 years for  reference climate conditions (20 C, no water limitations)"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cSoilMedium"	
  type:              "real"	
#----------------------------------
#

#============
    }, cSoilSlow: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "slow_soil_pool_carbon_content"	
  units:             "kg m-2"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass in Slow Soil Pool"	
  comment:           "fast is meant as lifetime of more than 100 years for  reference climate conditions (20 C, no water limitations)"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "cSoilSlow"	
  type:              "real"	
#----------------------------------
#

#============
    }, landCoverFrac: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Plant Functional Type Grid Fraction"	
  comment:           "The categories may differ from model to model, depending on their  PFT definitions.   This may include natural PFTs, anthropogenic PFTs, bare soil, lakes, urban areas, etc.   Sum of all should equal the fraction of the grid-cell that is land."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","vegtype","time" ]	
  out_name:          "landCoverFrac"	
  type:              "real"	
#----------------------------------
#

#============
    }, treeFracPrimDec: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Total Primary Deciduous Tree Fraction"	
  comment:           "This is the fraction of the entire grid cell  that is covered by total primary deciduous trees."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time","typepdec" ]	
  out_name:          "treeFracPrimDec"	
  type:              "real"	
#----------------------------------
#

#============
    }, treeFracPrimEver: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Total Primary Evergreen Tree Cover Fraction"	
  comment:           "fraction of entire grid cell  that is covered by primary evergreen trees."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time","typepever" ]	
  out_name:          "treeFracPrimEver"	
  type:              "real"	
#----------------------------------
#

#============
    }, treeFracSecDec: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Total Secondary Deciduous Tree Cover Fraction"	
  comment:           "fraction of entire grid cell  that is covered by secondary deciduous trees."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time","typesdec" ]	
  out_name:          "treeFracSecDec"	
  type:              "real"	
#----------------------------------
#

#============
    }, treeFracSecEver: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Total Secondary Evergreen Tree Cover Fraction"	
  comment:           "fraction of entire grid cell  that is covered by secondary evergreen trees."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time","typesever" ]	
  out_name:          "treeFracSecEver"	
  type:              "real"	
#----------------------------------
#

#============
    }, c3PftFrac: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Total C3 PFT Cover Fraction"	
  comment:           "fraction of entire grid cell  that is covered by C3 PFTs (including grass, crops, and trees)."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time","typec3pft" ]	
  out_name:          "c3PftFrac"	
  type:              "real"	
#----------------------------------
#

#============
    }, c4PftFrac: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "area_fraction"	
  units:             "%"	
  cell_methods:      "time: mean"	
  cell_measures:     "area: areacella"	
  long_name:         "Total C4 PFT Cover Fraction"	
  comment:           "fraction of entire grid cell  that is covered by C4 PFTs (including grass and crops)."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time","typec4pft" ]	
  out_name:          "c4PftFrac"	
  type:              "real"	
#----------------------------------
#

#============
    }, rGrowth: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "surface_upward_carbon_mass_flux_due_to_plant_respiration_for_biomass_growth"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass Flux into Atmosphere due to Growth Autotrophic Respiration on Land"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "rGrowth"	
  type:              "real"	
  positive:          "up"	
#----------------------------------
#

#============
    }, rMaint: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "surface_upward_carbon_mass_flux_due_to_plant_respiration_for_biomass_maintenance"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass Flux into Atmosphere due to Maintenance Autotrophic Respiration on Land"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "rMaint"	
  type:              "real"	
  positive:          "up"	
#----------------------------------
#

#============
    }, nppLeaf: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "net_primary_productivity_of_carbon_accumulated_in_leaves"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass Flux due to NPP Allocation to Leaf"	
  comment:           "This is the rate of carbon uptake by leaves due to NPP"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "nppLeaf"	
  type:              "real"	
  positive:          "down"	
#----------------------------------
#

#============
    }, nppWood: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "net_primary_productivity_of_carbon_accumulated_in_wood"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass Flux due to NPP Allocation to Wood"	
  comment:           "This is the rate of carbon uptake by wood due to NPP"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "nppWood"	
  type:              "real"	
  positive:          "down"	
#----------------------------------
#

#============
    }, nppRoot: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "net_primary_productivity_of_carbon_accumulated_in_roots"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Carbon Mass Flux due to NPP Allocation to Roots"	
  comment:           "This is the rate of carbon uptake by roots due to NPP"	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "nppRoot"	
  type:              "real"	
  positive:          "down"	
#----------------------------------
#

#============
    }, nep: {
#============
  modeling_realm:    "land"	
#----------------------------------
# Variable attributes:
#----------------------------------
  standard_name:     "surface_net_downward_mass_flux_of_carbon_dioxide_expressed_as_carbon_due_to_all_land_processes_excluding_anthropogenic_land_use_change"	
  units:             "kg m-2 s-1"	
  cell_methods:      "time: mean area: mean where land"	
  cell_measures:     "area: areacella"	
  long_name:         "Net Carbon Mass Flux out of Atmophere due to Net Ecosystem Productivity on Land."	
  comment:           "Natural flux of CO2 (expressed as a mass flux of carbon) from the atmosphere to the land calculated as the difference between uptake associated will photosynthesis and the release of CO2 from the sum of plant and soil respiration and fire.  Positive flux is into the land.  emissions from natural fires + human ignition fires as calculated by the fire module of the DGVM, but excluding any CO2 flux from fire included in fLuc, defined below (CO2 Flux to Atmosphere from Land Use Change)."	
#----------------------------------
# Additional variable information:
#----------------------------------
  dimensions:        [ "longitude","latitude","time" ]	
  out_name:          "nep"	
  type:              "real"	
  positive:          "down"	
#----------------------------------
#

 } }
